# Define worker processes
worker_processes 1;

# Events block (required by NGINX)
events {
    worker_connections 1024;
}

# HTTP block containing upstream and server configurations
http {

    error_log /dev/stderr debug;    # Log errors to stderr with debug level
    access_log /dev/stdout;         # Log access to stdout

    # Define the user-based WebSocket load balancing backend
    upstream websocket_backend {
        hash $arg_userId consistent;         # Use consistent hashing based on userId query parameter
        server 127.0.0.1:8080;               # Points to your single Node.js server instance on port 8080
    }

    # Main server configuration
    server {
        listen ${PORT};                           # Use Heroku provided PORT

        # WebSocket endpoint configuration
        location /socket {
            proxy_pass http://websocket_backend;      # Forward /socket requests to the backend
            proxy_http_version 1.1;                   # Use HTTP 1.1, required for WebSockets
            proxy_set_header Upgrade $http_upgrade;   # Enable WebSocket protocol upgrade
            proxy_set_header Connection "Upgrade";    # Enable WebSocket protocol upgrade
            proxy_set_header Host $host;              # Preserve the original Host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the client's IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 3600s;                          # Keep connection open for long periods
            proxy_connect_timeout 60s;  
        }

        # Default location for non-WebSocket requests (optional)
        location / {
            proxy_pass http://127.0.0.1:8080;      # Forward HTTP requests to the Node.js server
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 3600s;                          # Keep connection open for long periods
            proxy_connect_timeout 60s;  
        }
    }
}
